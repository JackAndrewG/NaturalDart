package lexer;
import java_cup.runtime.Symbol;

parser code
{:
    public Symbol s;

    public void syntax_error (Symbol s) {
        this.s = s;
    }

    public Symbol getS() {
        return this.s;
    }
:};

terminal INTEGER, FLOAT, STRING, VOID, PRINT, IFC, ELSEC, WHILE, RETURNC, ASSIGN, ADD, SUBTRACT, MULTIPLY, DIVIDE,
QUOTES, POPEN, PCLOSE, WOPEN, WCLOSE, EOL, COMPARATOR, NUMBER, NFLOAT, IDENTIFIER, ERROR;

non terminal FTYPE, BEGIN, BLOCK, DECLARATION, TEXT, PRINTOUT, CONDITIONAL, CONDITION, OPERATIONS, OPERATION, PARAMS;

start with BEGIN;
BEGIN ::=
    VOID IDENTIFIER POPEN PCLOSE WOPEN BLOCK WCLOSE |
    VOID IDENTIFIER POPEN PARAMS PCLOSE WOPEN BLOCK WCLOSE |
    FTYPE IDENTIFIER POPEN PCLOSE WOPEN BLOCK RETURNC IDENTIFIER EOL WCLOSE |
    FTYPE IDENTIFIER POPEN PARAMS PCLOSE WOPEN BLOCK RETURNC IDENTIFIER EOL WCLOSE
;

FTYPE ::= INTEGER | FLOAT | STRING;

BLOCK ::=
    DECLARATION |
    BLOCK DECLARATION |
    CONDITIONAL |
    BLOCK CONDITIONAL |
    OPERATIONS |
    BLOCK OPERATIONS
;

DECLARATION ::=
    INTEGER IDENTIFIER EOL |
    FLOAT IDENTIFIER EOL |
    STRING IDENTIFIER EOL |
    INTEGER IDENTIFIER ASSIGN NUMBER EOL |
    FLOAT IDENTIFIER ASSIGN NFLOAT EOL |
    STRING IDENTIFIER ASSIGN QUOTES TEXT QUOTES EOL |
    PRINTOUT
;

PRINTOUT ::=
    PRINT POPEN QUOTES TEXT QUOTES PCLOSE EOL |
    PRINT POPEN NUMBER PCLOSE EOL |
    PRINT POPEN NFLOAT PCLOSE EOL |
    PRINT POPEN IDENTIFIER PCLOSE EOL
;

CONDITIONAL ::=
    IFC POPEN CONDITION PCLOSE WOPEN BLOCK WCLOSE |
    IFC POPEN CONDITION PCLOSE WOPEN BLOCK WCLOSE ELSEC WOPEN BLOCK WCLOSE |
    WHILE POPEN CONDITION PCLOSE WOPEN BLOCK WCLOSE
;

OPERATIONS ::=
    INTEGER IDENTIFIER ASSIGN NUMBER OPERATION NUMBER EOL |
    INTEGER IDENTIFIER ASSIGN NUMBER OPERATION IDENTIFIER EOL |
    INTEGER IDENTIFIER ASSIGN IDENTIFIER OPERATION NUMBER EOL |
    INTEGER IDENTIFIER ASSIGN IDENTIFIER OPERATION IDENTIFIER EOL |
    FLOAT IDENTIFIER ASSIGN NFLOAT OPERATION NFLOAT EOL |
    FLOAT IDENTIFIER ASSIGN IDENTIFIER OPERATION NFLOAT EOL |
    FLOAT IDENTIFIER ASSIGN NFLOAT OPERATION IDENTIFIER EOL |
    FLOAT IDENTIFIER ASSIGN IDENTIFIER OPERATION IDENTIFIER EOL |
    IDENTIFIER ASSIGN NUMBER OPERATION NUMBER EOL |
    IDENTIFIER ASSIGN IDENTIFIER OPERATION NUMBER EOL |
    IDENTIFIER ASSIGN NUMBER OPERATION IDENTIFIER EOL |
    IDENTIFIER ASSIGN NFLOAT OPERATION NFLOAT EOL |
    IDENTIFIER ASSIGN IDENTIFIER OPERATION NFLOAT EOL |
    IDENTIFIER ASSIGN NFLOAT OPERATION IDENTIFIER EOL |
    IDENTIFIER ASSIGN IDENTIFIER OPERATION IDENTIFIER EOL
;

OPERATION ::= ADD | SUBTRACT | MULTIPLY | DIVIDE;

CONDITION ::=
    IDENTIFIER COMPARATOR NUMBER |
    IDENTIFIER COMPARATOR NFLOAT |
    IDENTIFIER COMPARATOR IDENTIFIER
;

TEXT ::=
    IDENTIFIER |
    TEXT IDENTIFIER
;

PARAMS ::=
    IDENTIFIER ASSIGN IDENTIFIER |
    IDENTIFIER ASSIGN INTEGER |
    IDENTIFIER ASSIGN FLOAT |
    IDENTIFIER ASSIGN STRING
;